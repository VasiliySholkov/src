package Andersen.HomeWork;

//        ДЗ на 08.01.2022
//        Создать свою реализацию линкед листа (главный принцип - элементы хранят ссылки на соседние элементы)
//        Методы, как на скриншоте, обязательны. Тип возвращаемого значения и входные аргументы МОГУТ быть изменены.
//        Написать тесты на предыдущий MyArrayList и на ваш LinkedList.
//        Вся работа должна производиться на GitHub. Необходимо создать общий репозиторий. Работа каждого члена команды
//        над задачей должна быть отдельным пул реквестом в мастер ветку! Одобрение пул реквеста за капитаном команды.
//        Смотреть и комментировать - на ваше усмотрение.
//        За финальный результат (master ветку) отвечает капитан.
//        Дедлайн - (07.01.2022) пятница 23:59. На этот момент в мастер ветке должна находиться рабочая финальная версия дз.
//        Отзывы команд до субботы 12:00
//        Отзыв - оценка работы каждого члена вашей команды (если вы капитан) или вашего капитана.
//        КАЖДЫЙ должен оставить отзыв на капитана. КАПИТАН должен оставить отзыв на КАЖДОГО члена команды. Критерии:
//        -Вовлеченность в процесс
//        -Продуктивность в работе над задачей
//        -Ответственность
//        -Уровень знаний
//        -Подготовка по теории к следующему занятию
//
//        Каждая команда должна подготовить несколько вопросов по темам Коллекции и Git.
//        В начале занятия между командами пройдет взаимный опрос. Если к1 задает вопрос к2, но те не могут ответить,
//        к1 должна ответить сама. Балл команда получает в случае, если ответила на заданный ей вопрос, и в случае,
//        если на вопрос вашей команды не смогли ответить и вы развернуто объяснили сами. Так же оценивается интересность
//        и важность вопроса. Глупые вопросы с целью засадить учитываться не будут.

public class Test {
    public static void main(String[] args) {
        MyLinkedList myLinkedList = new MyLinkedList();
        myLinkedList.add(1);
        myLinkedList.add(2);
        myLinkedList.add(3);
        myLinkedList.add(10);

        System.out.println(myLinkedList);
        System.out.println(myLinkedList.get(0));
        System.out.println(myLinkedList.get(1));
        System.out.println(myLinkedList.get(2));

        myLinkedList.remove(1);
        System.out.println(myLinkedList);
        myLinkedList.remove(10);
        System.out.println(myLinkedList);

    }
}
